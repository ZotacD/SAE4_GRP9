<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>Créer une discussion</title>
    <link rel="stylesheet" href="/css/createChat.css"/>
  </head>
  <body>
    <h1>Créer une discussion</h1>
    <form id="create-chat-form">
      <label for="chat-name">Nom de la discussion :</label>
      <input type="text" id="chat-name" name="chat-name" required />
      <button type="submit">Créer la discussion</button>
    </form>

    <h2>Ajouter des membres à la discussion</h2>
<form id="add-member-form">
  <label for="member-search">Rechercher un membre :</label>
  <input type="text" id="member-search" name="member-search" list="member-datalist" required />
  <datalist id="member-datalist"></datalist>
  <button type="submit">Ajouter le membre</button>
</form>

<h2>Membres de la discussion</h2>
<ul id="member-list"></ul>

<button id="validate-chat-btn" type="button" disabled>Valider le chat et ouvrir</button>

<script>
  const createChatForm = document.getElementById("create-chat-form");
  const addMemberForm = document.getElementById("add-member-form");
  const selectedMemberList = document.getElementById("member-list");
  const validateChatBtn = document.getElementById("validate-chat-btn");
  const memberSearchInput = document.getElementById("member-search");
  const memberList = document.getElementById("member-datalist");

  let id_chat = null;

  async function getMembers() {
    const q = memberSearchInput.value ? memberSearchInput.value : "@"
    let response = await fetch(`/api/chat/searchChatUser/` + q, {
      method: "GET",
    });

    let data = await response.json();

    data["users"].forEach((user) => {
        let opt = document.createElement("option")
        opt.value = user.email
        memberList.appendChild(opt)
    })
  }

  createChatForm.addEventListener("submit", async (event) => {
    event.preventDefault();

    const name_chat = document.getElementById("chat-name").value;

    const response = await fetch("/api/chat/addChat", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ name_chat: name_chat }),
    });

    const data = await response.json();

    if (data.success) {
        id_chat = data.id_chat;
      alert("La discussion a été créée avec succès !");
    } else {
      alert("Impossible de créer la discussion.");
    }
  });

  addMemberForm.addEventListener("submit", async (event) => {
    event.preventDefault();

    console.log(id_chat)

    if (!id_chat) {
      alert("Veuillez créer une discussion avant d'ajouter des membres.");
      return;
    }

    const selectedEmail = memberSearchInput.value;

    let response = await fetch(`/api/chat/addChatMember`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ email: selectedEmail, id_chat: id_chat }),
    });

    let data = await response.json();

    if (data.success) {
      const listItem = document.createElement("li");
      listItem.textContent = selectedEmail;
      selectedMemberList.appendChild(listItem);
      console.log("Le membre a été ajouté avec succès !");
    } else {
      console.log("Impossible d'ajouter le membre.");
      return
    }

    //Connection

    const generatePeerId = () => {
      const timestamp = new Date().getTime();
      const randomString = Math.random().toString(36).substring(2, 10);
      const peerId = `${timestamp}-${randomString}`;
      return peerId;
    };

    response = await fetch(`/api/chat/addConnection`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ email: selectedEmail, id_chat: id_chat, peer_id: generatePeerId() }),
    });

    data = await response.json();

    if (data.success) {
      console.log("La connexion a bien été créée !");
      validateChatBtn.disabled = false;
    } else {
      console.log("Impossible de créer la connexion.");
      return
    }
  });

  validateChatBtn.addEventListener("click", () => {
    if (id_chat) {
      window.location.href = `/chat/${id_chat}`;
    }
  });

  window.onload = (async () => {
    await getMembers();
  })
</script>

  </body>
</html>
